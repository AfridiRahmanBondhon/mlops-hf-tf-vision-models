name: ci-intermediate.yml
on:
  push:
    branches:
      - main

jobs:
  kubeflow-build:
    runs-on: ubuntu-latest
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v2.4.2
      - id: training-pipeline-change
        name: check if training pipeline has anything changed
        uses: dorny/paths-filter@v2
        with:
          filters: "src:\n  - 'intermediate/**'\n"
      - if: steps.training-pipeline-change.outputs.src == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - if: steps.training-pipeline-change.outputs.src == 'true'
        name: Install required Python packages
        run: 'pip install -r requirements.txt

          '
      - id: measurement-5
        name: Record Measurement After Install required Python packages
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install required Python packages
          task: get-measurement
      - if: steps.training-pipeline-change.outputs.src == 'true'
        name: Compile TFX Training Pipeline for Kubeflow
        run: "tfx pipeline compile \\\n  --pipeline-path kubeflow_runner.py \\\n \
          \ --engine vertex\n  \n"
        working-directory: intermediate
      - id: measurement-7
        name: Record Measurement After Compile TFX Training Pipeline for Kubeflow
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Compile TFX Training Pipeline for Kubeflow
          task: get-measurement
      - if: steps.training-pipeline-change.outputs.src == 'true'
        name: Create TFX Training Pipeline for Kubeflow
        run: "tfx pipeline create \\\n  --pipeline-path kubeflow_runner.py \\\n  --engine\
          \ vertex\n"
        working-directory: intermediate
      - id: measurement-9
        name: Record Measurement After Create TFX Training Pipeline for Kubeflow
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Create TFX Training Pipeline for Kubeflow
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
  local-build:
    runs-on: ubuntu-latest
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v2.4.2
      - id: training-pipeline-change
        name: check if training pipeline has anything changed
        uses: dorny/paths-filter@v2
        with:
          filters: "src:\n  - 'intermediate/**'\n"
      - if: steps.training-pipeline-change.outputs.src == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - if: steps.training-pipeline-change.outputs.src == 'true'
        name: Install required Python packages
        run: 'pip install -r requirements.txt

          '
      - id: measurement-5
        name: Record Measurement After Install required Python packages
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install required Python packages
          task: get-measurement
      - if: steps.training-pipeline-change.outputs.src == 'true'
        name: Compile TFX Training Pipeline for Local
        run: "tfx pipeline compile \\\n  --pipeline-path local_runner.py \\\n  --engine\
          \ local\n  \n"
        working-directory: intermediate
      - id: measurement-7
        name: Record Measurement After Compile TFX Training Pipeline for Local
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Compile TFX Training Pipeline for Local
          task: get-measurement
      - if: steps.training-pipeline-change.outputs.src == 'true'
        name: Create TFX Training Pipeline for Local
        run: "tfx pipeline create \\\n  --pipeline-path local_runner.py \\\n  --engine\
          \ local\n"
        working-directory: intermediate
      - id: measurement-9
        name: Record Measurement After Create TFX Training Pipeline for Local
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Create TFX Training Pipeline for Local
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
  local-run:
    needs:
      - local-build
    runs-on: ubuntu-latest
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v2.4.2
      - id: training-pipeline-change
        name: check if training pipeline has anything changed
        uses: dorny/paths-filter@v2
        with:
          filters: "src:\n  - 'intermediate/**'\n"
      - if: steps.training-pipeline-change.outputs.src == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - if: steps.training-pipeline-change.outputs.src == 'true'
        name: Install required Python packages
        run: 'pip install -r requirements.txt

          '
      - id: measurement-5
        name: Record Measurement After Install required Python packages
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install required Python packages
          task: get-measurement
      - if: steps.training-pipeline-change.outputs.src == 'true'
        name: Create TFX Training Pipeline for Local
        run: "tfx pipeline create \\\n  --pipeline-path local_runner.py \\\n  --engine\
          \ local\n"
        working-directory: intermediate
      - id: measurement-7
        name: Record Measurement After Create TFX Training Pipeline for Local
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Create TFX Training Pipeline for Local
          task: get-measurement
      - if: steps.training-pipeline-change.outputs.src == 'true'
        name: Run TFX Training Pipeline for Local
        run: "tfx run create \\\n  --pipeline-name vit-e2e-pipeline-intermediate \\\
          \n  --engine local\n"
        working-directory: intermediate
      - id: measurement-9
        name: Record Measurement After Run TFX Training Pipeline for Local
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Run TFX Training Pipeline for Local
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
