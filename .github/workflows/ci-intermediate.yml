name: CI / Intermediate

on:
  push:
    branches:
      - main
      
  pull_request:      

jobs:
  local-build:
    runs-on: ubuntu-latest
  
    steps:
    - uses: actions/checkout@v2.4.2

    - name: check if training pipeline has anything changed
      uses: dorny/paths-filter@v2
      id: training-pipeline-change
      with:
          filters: |
              src:
                - 'intermediate/**'

    - uses: actions/setup-python@v4
      if: steps.training-pipeline-change.outputs.src == 'true'
      with:
        python-version: '3.8'
        
    - name: 'Install required Python packages'
      if: steps.training-pipeline-change.outputs.src == 'true'    
      run: |
        pip install -r requirements.txt

    - name: 'Compile TFX Training Pipeline for Local'
      if: steps.training-pipeline-change.outputs.src == 'true'    
      working-directory: 'intermediate'
      run: |
        tfx pipeline compile \
          --pipeline-path local_runner.py \
          --engine local
          
    - name: 'Create TFX Training Pipeline for Local'
      if: steps.training-pipeline-change.outputs.src == 'true'    
      working-directory: 'intermediate'
      run: |
        tfx pipeline create \
          --pipeline-path local_runner.py \
          --engine local

  local-run:
    runs-on: ubuntu-latest
    needs: [local-build]
  
    steps:
    - uses: actions/checkout@v2.4.2

    - name: check if training pipeline has anything changed
      uses: dorny/paths-filter@v2
      id: training-pipeline-change
      with:
          filters: |
              src:
                - 'intermediate/**'

    - uses: actions/setup-python@v4
      if: steps.training-pipeline-change.outputs.src == 'true'
      with:
        python-version: '3.8'
        
    - name: 'Install required Python packages'
      if: steps.training-pipeline-change.outputs.src == 'true'    
      run: |
        pip install -r requirements.txt
        
    - name: 'Create TFX Training Pipeline for Local'
      if: steps.training-pipeline-change.outputs.src == 'true'    
      working-directory: 'intermediate'
      run: |
        tfx pipeline create \
          --pipeline-path local_runner.py \
          --engine local

    - name: 'Run TFX Training Pipeline for Local'
      if: steps.training-pipeline-change.outputs.src == 'true'
      working-directory: 'intermediate'
      run: |
        tfx run create \
          --pipeline-name vit-e2e-pipeline-intermediate \
          --engine local

  kubeflow-build:
    runs-on: ubuntu-latest
  
    steps:
    - uses: actions/checkout@v2.4.2

    - name: check if training pipeline has anything changed
      uses: dorny/paths-filter@v2
      id: training-pipeline-change
      with:
          filters: |
              src:
                - 'intermediate/**'

    - uses: actions/setup-python@v4
      if: steps.training-pipeline-change.outputs.src == 'true'
      with:
        python-version: '3.8'
        
    - name: 'Install required Python packages'
      if: steps.training-pipeline-change.outputs.src == 'true'    
      run: |
        pip install -r requirements.txt

    - name: 'Compile TFX Training Pipeline for Kubeflow'
      if: steps.training-pipeline-change.outputs.src == 'true'    
      working-directory: 'intermediate'
      run: |
        tfx pipeline compile \
          --pipeline-path kubeflow_runner.py \
          --engine vertex
          
    - name: 'Create TFX Training Pipeline for Kubeflow'
      if: steps.training-pipeline-change.outputs.src == 'true'    
      working-directory: 'intermediate'
      run: |
        tfx pipeline create \
          --pipeline-path kubeflow_runner.py \
          --engine vertex
